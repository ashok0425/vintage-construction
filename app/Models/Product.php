<?php

namespace App\Models;

use App\Models\Unit;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Auth;

class Product extends Model
{

    use SoftDeletes;

    protected $fillable = [
        'title',
        'sku',
        'category_id',
        'purchase_price',
        'sell_price',
        'price_type',
        'tax_id',
        'unit_id',
        'short_description',
        'business_id'
    ];

    protected $appends = ['current_stock_quantity', 'total_sell_qty','total_purchase_qty'];

    public function getCurrentStockQuantityAttribute()
    {
      return  $this->purchaseProducts->where('business_id', Auth::user()->business_id)->sum('quantity')-
        $this->sellProducts->where('business_id', Auth::user()->business_id)->sum('quantity');
    }

    public function getTotalSellQtyAttribute(){
      return $this->sellProducts->where('business_id', Auth::user()->business_id)->sum('quantity');
    }

    public function getTotalPurchaseQtyAttribute(){
        return $this->purchaseProducts->where('business_id', Auth::user()->business_id)->sum('quantity');
      }


    public function purchaseProducts()
    {
        return $this->hasMany(PurchaseProduct::class);
    }

    public function sellProducts()
    {
        return $this->hasMany(SellProduct::class);
    }

    public function tax()
    {
        return $this->belongsTo(Tax::class)->withTrashed();
    }

    public function unit(){
        return $this->belongsTo(Unit::class)->withTrashed();
    }

    public function category()
    {
        return $this->belongsTo(Category::class)->withTrashed();
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function($model){
            $model->created_by =  auth()->user()->id;
            $model->business_id =  1;
        });

        static::addGlobalScope('short', function (Builder $builder) {
            $builder->orderByDesc('id');
        });
    }
}
